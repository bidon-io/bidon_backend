// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: org/bidon/proto/v1/mediation/mediation.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX

package mediation

import (
	_ "github.com/bidon-io/bidon-backend/pkg/proto/com/iabtechlab/adcom/v1"
	context "github.com/bidon-io/bidon-backend/pkg/proto/com/iabtechlab/adcom/v1/context"
	placement "github.com/bidon-io/bidon-backend/pkg/proto/com/iabtechlab/adcom/v1/placement"
	v3 "github.com/bidon-io/bidon-backend/pkg/proto/com/iabtechlab/openrtb/v3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buf:lint:ignore ENUM_VALUE_PREFIX
type Orientation int32

const (
	Orientation_ORIENTATION_UNSPECIFIED Orientation = 0
	Orientation_PORTRAIT                Orientation = 1
	Orientation_LANDSCAPE               Orientation = 2
)

// Enum value maps for Orientation.
var (
	Orientation_name = map[int32]string{
		0: "ORIENTATION_UNSPECIFIED",
		1: "PORTRAIT",
		2: "LANDSCAPE",
	}
	Orientation_value = map[string]int32{
		"ORIENTATION_UNSPECIFIED": 0,
		"PORTRAIT":                1,
		"LANDSCAPE":               2,
	}
)

func (x Orientation) Enum() *Orientation {
	p := new(Orientation)
	*p = x
	return p
}

func (x Orientation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Orientation) Descriptor() protoreflect.EnumDescriptor {
	return file_org_bidon_proto_v1_mediation_mediation_proto_enumTypes[0].Descriptor()
}

func (Orientation) Type() protoreflect.EnumType {
	return &file_org_bidon_proto_v1_mediation_mediation_proto_enumTypes[0]
}

func (x Orientation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Orientation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Orientation(num)
	return nil
}

// Deprecated: Use Orientation.Descriptor instead.
func (Orientation) EnumDescriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
type AdFormat int32

const (
	AdFormat_FORMAT_UNSPECIFIED AdFormat = 0
	AdFormat_BANNER             AdFormat = 1
	AdFormat_LEADERBOARD        AdFormat = 2
	AdFormat_MREC               AdFormat = 3
	AdFormat_ADAPTIVE           AdFormat = 4
)

// Enum value maps for AdFormat.
var (
	AdFormat_name = map[int32]string{
		0: "FORMAT_UNSPECIFIED",
		1: "BANNER",
		2: "LEADERBOARD",
		3: "MREC",
		4: "ADAPTIVE",
	}
	AdFormat_value = map[string]int32{
		"FORMAT_UNSPECIFIED": 0,
		"BANNER":             1,
		"LEADERBOARD":        2,
		"MREC":               3,
		"ADAPTIVE":           4,
	}
)

func (x AdFormat) Enum() *AdFormat {
	p := new(AdFormat)
	*p = x
	return p
}

func (x AdFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_org_bidon_proto_v1_mediation_mediation_proto_enumTypes[1].Descriptor()
}

func (AdFormat) Type() protoreflect.EnumType {
	return &file_org_bidon_proto_v1_mediation_mediation_proto_enumTypes[1]
}

func (x AdFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AdFormat) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AdFormat(num)
	return nil
}

// Deprecated: Use AdFormat.Descriptor instead.
func (AdFormat) EnumDescriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{1}
}

type AppExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key              *string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Framework        *string  `protobuf:"bytes,2,opt,name=framework" json:"framework,omitempty"`
	FrameworkVersion *string  `protobuf:"bytes,3,opt,name=framework_version,json=frameworkVersion" json:"framework_version,omitempty"`
	PluginVersion    *string  `protobuf:"bytes,4,opt,name=plugin_version,json=pluginVersion" json:"plugin_version,omitempty"`
	SdkVersion       *string  `protobuf:"bytes,5,opt,name=sdk_version,json=sdkVersion" json:"sdk_version,omitempty"`
	Skadn            []string `protobuf:"bytes,6,rep,name=skadn" json:"skadn,omitempty"`
	BidonVersion     *string  `protobuf:"bytes,7,opt,name=bidon_version,json=bidonVersion" json:"bidon_version,omitempty"` // set from http header
}

func (x *AppExt) Reset() {
	*x = AppExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppExt) ProtoMessage() {}

func (x *AppExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppExt.ProtoReflect.Descriptor instead.
func (*AppExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{0}
}

func (x *AppExt) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *AppExt) GetFramework() string {
	if x != nil && x.Framework != nil {
		return *x.Framework
	}
	return ""
}

func (x *AppExt) GetFrameworkVersion() string {
	if x != nil && x.FrameworkVersion != nil {
		return *x.FrameworkVersion
	}
	return ""
}

func (x *AppExt) GetPluginVersion() string {
	if x != nil && x.PluginVersion != nil {
		return *x.PluginVersion
	}
	return ""
}

func (x *AppExt) GetSdkVersion() string {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return ""
}

func (x *AppExt) GetSkadn() []string {
	if x != nil {
		return x.Skadn
	}
	return nil
}

func (x *AppExt) GetBidonVersion() string {
	if x != nil && x.BidonVersion != nil {
		return *x.BidonVersion
	}
	return ""
}

type DeviceExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the session
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Timestamp of the session launch
	LaunchTs *int64 `protobuf:"varint,2,opt,name=launch_ts,json=launchTs" json:"launch_ts,omitempty"`
	// Monotonic timestamp of the session launch
	LaunchMonotonicTs *int64 `protobuf:"varint,3,opt,name=launch_monotonic_ts,json=launchMonotonicTs" json:"launch_monotonic_ts,omitempty"`
	// Timestamp of the session start
	StartTs *int64 `protobuf:"varint,4,opt,name=start_ts,json=startTs" json:"start_ts,omitempty"`
	// Monotonic timestamp of the session start
	StartMonotonicTs *int64 `protobuf:"varint,5,opt,name=start_monotonic_ts,json=startMonotonicTs" json:"start_monotonic_ts,omitempty"`
	// Current timestamp of the session
	Ts *int64 `protobuf:"varint,6,opt,name=ts" json:"ts,omitempty"`
	// Current monotonic timestamp of the session
	MonotonicTs *int64 `protobuf:"varint,7,opt,name=monotonic_ts,json=monotonicTs" json:"monotonic_ts,omitempty"`
	// Timestamps when memory warnings occurred
	MemoryWarningsTs []int64 `protobuf:"varint,8,rep,name=memory_warnings_ts,json=memoryWarningsTs" json:"memory_warnings_ts,omitempty"`
	// Monotonic timestamps when memory warnings occurred
	MemoryWarningsMonotonicTs []int64 `protobuf:"varint,9,rep,name=memory_warnings_monotonic_ts,json=memoryWarningsMonotonicTs" json:"memory_warnings_monotonic_ts,omitempty"`
	// Amount of RAM used
	RamUsed *int64 `protobuf:"varint,10,opt,name=ram_used,json=ramUsed" json:"ram_used,omitempty"`
	// Total size of RAM
	RamSize *int64 `protobuf:"varint,11,opt,name=ram_size,json=ramSize" json:"ram_size,omitempty"`
	// Free storage space available
	StorageFree *int64 `protobuf:"varint,12,opt,name=storage_free,json=storageFree" json:"storage_free,omitempty"`
	// Used storage space
	StorageUsed *int64 `protobuf:"varint,13,opt,name=storage_used,json=storageUsed" json:"storage_used,omitempty"`
	// Battery level percentage
	Battery *float64 `protobuf:"fixed64,14,opt,name=battery" json:"battery,omitempty"`
	// CPU usage percentage
	CpuUsage *float64 `protobuf:"fixed64,15,opt,name=cpu_usage,json=cpuUsage" json:"cpu_usage,omitempty"`
}

func (x *DeviceExt) Reset() {
	*x = DeviceExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceExt) ProtoMessage() {}

func (x *DeviceExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceExt.ProtoReflect.Descriptor instead.
func (*DeviceExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceExt) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *DeviceExt) GetLaunchTs() int64 {
	if x != nil && x.LaunchTs != nil {
		return *x.LaunchTs
	}
	return 0
}

func (x *DeviceExt) GetLaunchMonotonicTs() int64 {
	if x != nil && x.LaunchMonotonicTs != nil {
		return *x.LaunchMonotonicTs
	}
	return 0
}

func (x *DeviceExt) GetStartTs() int64 {
	if x != nil && x.StartTs != nil {
		return *x.StartTs
	}
	return 0
}

func (x *DeviceExt) GetStartMonotonicTs() int64 {
	if x != nil && x.StartMonotonicTs != nil {
		return *x.StartMonotonicTs
	}
	return 0
}

func (x *DeviceExt) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *DeviceExt) GetMonotonicTs() int64 {
	if x != nil && x.MonotonicTs != nil {
		return *x.MonotonicTs
	}
	return 0
}

func (x *DeviceExt) GetMemoryWarningsTs() []int64 {
	if x != nil {
		return x.MemoryWarningsTs
	}
	return nil
}

func (x *DeviceExt) GetMemoryWarningsMonotonicTs() []int64 {
	if x != nil {
		return x.MemoryWarningsMonotonicTs
	}
	return nil
}

func (x *DeviceExt) GetRamUsed() int64 {
	if x != nil && x.RamUsed != nil {
		return *x.RamUsed
	}
	return 0
}

func (x *DeviceExt) GetRamSize() int64 {
	if x != nil && x.RamSize != nil {
		return *x.RamSize
	}
	return 0
}

func (x *DeviceExt) GetStorageFree() int64 {
	if x != nil && x.StorageFree != nil {
		return *x.StorageFree
	}
	return 0
}

func (x *DeviceExt) GetStorageUsed() int64 {
	if x != nil && x.StorageUsed != nil {
		return *x.StorageUsed
	}
	return 0
}

func (x *DeviceExt) GetBattery() float64 {
	if x != nil && x.Battery != nil {
		return *x.Battery
	}
	return 0
}

func (x *DeviceExt) GetCpuUsage() float64 {
	if x != nil && x.CpuUsage != nil {
		return *x.CpuUsage
	}
	return 0
}

type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Uid *string `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	Ext *string `protobuf:"bytes,3,opt,name=ext" json:"ext,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{2}
}

func (x *Segment) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Segment) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *Segment) GetExt() string {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return ""
}

type UserExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idfa                        *string    `protobuf:"bytes,1,opt,name=idfa" json:"idfa,omitempty"`
	TrackingAuthorizationStatus *string    `protobuf:"bytes,2,opt,name=tracking_authorization_status,json=trackingAuthorizationStatus" json:"tracking_authorization_status,omitempty"`
	Idfv                        *string    `protobuf:"bytes,3,opt,name=idfv" json:"idfv,omitempty"`
	Idg                         *string    `protobuf:"bytes,4,opt,name=idg" json:"idg,omitempty"`
	Segments                    []*Segment `protobuf:"bytes,6,rep,name=segments" json:"segments,omitempty"`
}

func (x *UserExt) Reset() {
	*x = UserExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExt) ProtoMessage() {}

func (x *UserExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExt.ProtoReflect.Descriptor instead.
func (*UserExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{3}
}

func (x *UserExt) GetIdfa() string {
	if x != nil && x.Idfa != nil {
		return *x.Idfa
	}
	return ""
}

func (x *UserExt) GetTrackingAuthorizationStatus() string {
	if x != nil && x.TrackingAuthorizationStatus != nil {
		return *x.TrackingAuthorizationStatus
	}
	return ""
}

func (x *UserExt) GetIdfv() string {
	if x != nil && x.Idfv != nil {
		return *x.Idfv
	}
	return ""
}

func (x *UserExt) GetIdg() string {
	if x != nil && x.Idg != nil {
		return *x.Idg
	}
	return ""
}

func (x *UserExt) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type RegsExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsPrivacy *string `protobuf:"bytes,2,opt,name=us_privacy,json=usPrivacy" json:"us_privacy,omitempty"`
	EuPrivacy *string `protobuf:"bytes,3,opt,name=eu_privacy,json=euPrivacy" json:"eu_privacy,omitempty"`
	Iab       *string `protobuf:"bytes,4,opt,name=iab" json:"iab,omitempty"`
}

func (x *RegsExt) Reset() {
	*x = RegsExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegsExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegsExt) ProtoMessage() {}

func (x *RegsExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegsExt.ProtoReflect.Descriptor instead.
func (*RegsExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{4}
}

func (x *RegsExt) GetUsPrivacy() string {
	if x != nil && x.UsPrivacy != nil {
		return *x.UsPrivacy
	}
	return ""
}

func (x *RegsExt) GetEuPrivacy() string {
	if x != nil && x.EuPrivacy != nil {
		return *x.EuPrivacy
	}
	return ""
}

func (x *RegsExt) GetIab() string {
	if x != nil && x.Iab != nil {
		return *x.Iab
	}
	return ""
}

type PlacementExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuctionId               *string            `protobuf:"bytes,1,opt,name=auction_id,json=auctionId" json:"auction_id,omitempty"`
	AuctionKey              *string            `protobuf:"bytes,2,opt,name=auction_key,json=auctionKey" json:"auction_key,omitempty"`
	AuctionConfigurationId  *int64             `protobuf:"varint,3,opt,name=auction_configuration_id,json=auctionConfigurationId" json:"auction_configuration_id,omitempty"`
	AuctionConfigurationUid *string            `protobuf:"bytes,4,opt,name=auction_configuration_uid,json=auctionConfigurationUid" json:"auction_configuration_uid,omitempty"`
	Orientation             *Orientation       `protobuf:"varint,5,opt,name=orientation,enum=org.bidon.proto.v1.mediation.Orientation" json:"orientation,omitempty"`
	Demands                 map[string]*Demand `protobuf:"bytes,6,rep,name=demands" json:"demands,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Banner                  *BannerAd          `protobuf:"bytes,7,opt,name=banner" json:"banner,omitempty"`
	Interstitial            *string            `protobuf:"bytes,8,opt,name=interstitial" json:"interstitial,omitempty"`
	Rewarded                *string            `protobuf:"bytes,9,opt,name=rewarded" json:"rewarded,omitempty"`
}

func (x *PlacementExt) Reset() {
	*x = PlacementExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlacementExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementExt) ProtoMessage() {}

func (x *PlacementExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementExt.ProtoReflect.Descriptor instead.
func (*PlacementExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{5}
}

func (x *PlacementExt) GetAuctionId() string {
	if x != nil && x.AuctionId != nil {
		return *x.AuctionId
	}
	return ""
}

func (x *PlacementExt) GetAuctionKey() string {
	if x != nil && x.AuctionKey != nil {
		return *x.AuctionKey
	}
	return ""
}

func (x *PlacementExt) GetAuctionConfigurationId() int64 {
	if x != nil && x.AuctionConfigurationId != nil {
		return *x.AuctionConfigurationId
	}
	return 0
}

func (x *PlacementExt) GetAuctionConfigurationUid() string {
	if x != nil && x.AuctionConfigurationUid != nil {
		return *x.AuctionConfigurationUid
	}
	return ""
}

func (x *PlacementExt) GetOrientation() Orientation {
	if x != nil && x.Orientation != nil {
		return *x.Orientation
	}
	return Orientation_ORIENTATION_UNSPECIFIED
}

func (x *PlacementExt) GetDemands() map[string]*Demand {
	if x != nil {
		return x.Demands
	}
	return nil
}

func (x *PlacementExt) GetBanner() *BannerAd {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *PlacementExt) GetInterstitial() string {
	if x != nil && x.Interstitial != nil {
		return *x.Interstitial
	}
	return ""
}

func (x *PlacementExt) GetRewarded() string {
	if x != nil && x.Rewarded != nil {
		return *x.Rewarded
	}
	return ""
}

type Demand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         *string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Status        *string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	TokenFinishTs *int64  `protobuf:"varint,3,opt,name=token_finish_ts,json=tokenFinishTs" json:"token_finish_ts,omitempty"`
	TokenStartTs  *int64  `protobuf:"varint,4,opt,name=token_start_ts,json=tokenStartTs" json:"token_start_ts,omitempty"`
}

func (x *Demand) Reset() {
	*x = Demand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Demand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Demand) ProtoMessage() {}

func (x *Demand) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Demand.ProtoReflect.Descriptor instead.
func (*Demand) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{6}
}

func (x *Demand) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *Demand) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *Demand) GetTokenFinishTs() int64 {
	if x != nil && x.TokenFinishTs != nil {
		return *x.TokenFinishTs
	}
	return 0
}

func (x *Demand) GetTokenStartTs() int64 {
	if x != nil && x.TokenStartTs != nil {
		return *x.TokenStartTs
	}
	return 0
}

type BannerAd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *AdFormat `protobuf:"varint,1,opt,name=format,enum=org.bidon.proto.v1.mediation.AdFormat" json:"format,omitempty"`
}

func (x *BannerAd) Reset() {
	*x = BannerAd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerAd) ProtoMessage() {}

func (x *BannerAd) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerAd.ProtoReflect.Descriptor instead.
func (*BannerAd) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{7}
}

func (x *BannerAd) GetFormat() AdFormat {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return AdFormat_FORMAT_UNSPECIFIED
}

type AdapterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string     `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"` // Adapter name (e.g., "property1", "property2")
	Value *SdkAdapter `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *AdapterEntry) Reset() {
	*x = AdapterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdapterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdapterEntry) ProtoMessage() {}

func (x *AdapterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdapterEntry.ProtoReflect.Descriptor instead.
func (*AdapterEntry) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{8}
}

func (x *AdapterEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *AdapterEntry) GetValue() *SdkAdapter {
	if x != nil {
		return x.Value
	}
	return nil
}

type SdkAdapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version    *string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	SdkVersion *string `protobuf:"bytes,2,opt,name=sdk_version,json=sdkVersion" json:"sdk_version,omitempty"`
}

func (x *SdkAdapter) Reset() {
	*x = SdkAdapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkAdapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkAdapter) ProtoMessage() {}

func (x *SdkAdapter) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkAdapter.ProtoReflect.Descriptor instead.
func (*SdkAdapter) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{9}
}

func (x *SdkAdapter) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *SdkAdapter) GetSdkVersion() string {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return ""
}

type BidExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of bid associated with the ad unit
	BidType *string `protobuf:"bytes,1,opt,name=bid_type,json=bidType" json:"bid_type,omitempty"`
	// Label for the ad unit
	Label *string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	// Additional properties for the ad unit
	Ext map[string]string `protobuf:"bytes,3,rep,name=ext" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *BidExt) Reset() {
	*x = BidExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidExt) ProtoMessage() {}

func (x *BidExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidExt.ProtoReflect.Descriptor instead.
func (*BidExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{10}
}

func (x *BidExt) GetBidType() string {
	if x != nil && x.BidType != nil {
		return *x.BidType
	}
	return ""
}

func (x *BidExt) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *BidExt) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type AuctionResponseExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the auction
	AuctionId *string `protobuf:"bytes,1,opt,name=auction_id,json=auctionId" json:"auction_id,omitempty"`
	// Configuration ID for the auction
	AuctionConfigurationId *int64 `protobuf:"varint,2,opt,name=auction_configuration_id,json=auctionConfigurationId" json:"auction_configuration_id,omitempty"`
	// Unique identifier for the auction configuration
	AuctionConfigurationUid *string `protobuf:"bytes,3,opt,name=auction_configuration_uid,json=auctionConfigurationUid" json:"auction_configuration_uid,omitempty"`
	// Represents the auction key
	Token *string `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	// Price floor for the auction
	AuctionPricefloor *float64 `protobuf:"fixed64,5,opt,name=auction_pricefloor,json=auctionPricefloor" json:"auction_pricefloor,omitempty"`
	// Timeout for the auction
	AuctionTimeout *int32 `protobuf:"varint,6,opt,name=auction_timeout,json=auctionTimeout" json:"auction_timeout,omitempty"`
	// Indicates if external win notifications are enabled
	ExternalWinNotifications *bool `protobuf:"varint,7,opt,name=external_win_notifications,json=externalWinNotifications" json:"external_win_notifications,omitempty"`
	// Segment for the auction
	Segment *Segment `protobuf:"bytes,8,opt,name=segment" json:"segment,omitempty"`
}

func (x *AuctionResponseExt) Reset() {
	*x = AuctionResponseExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionResponseExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionResponseExt) ProtoMessage() {}

func (x *AuctionResponseExt) ProtoReflect() protoreflect.Message {
	mi := &file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionResponseExt.ProtoReflect.Descriptor instead.
func (*AuctionResponseExt) Descriptor() ([]byte, []int) {
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP(), []int{11}
}

func (x *AuctionResponseExt) GetAuctionId() string {
	if x != nil && x.AuctionId != nil {
		return *x.AuctionId
	}
	return ""
}

func (x *AuctionResponseExt) GetAuctionConfigurationId() int64 {
	if x != nil && x.AuctionConfigurationId != nil {
		return *x.AuctionConfigurationId
	}
	return 0
}

func (x *AuctionResponseExt) GetAuctionConfigurationUid() string {
	if x != nil && x.AuctionConfigurationUid != nil {
		return *x.AuctionConfigurationUid
	}
	return ""
}

func (x *AuctionResponseExt) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *AuctionResponseExt) GetAuctionPricefloor() float64 {
	if x != nil && x.AuctionPricefloor != nil {
		return *x.AuctionPricefloor
	}
	return 0
}

func (x *AuctionResponseExt) GetAuctionTimeout() int32 {
	if x != nil && x.AuctionTimeout != nil {
		return *x.AuctionTimeout
	}
	return 0
}

func (x *AuctionResponseExt) GetExternalWinNotifications() bool {
	if x != nil && x.ExternalWinNotifications != nil {
		return *x.ExternalWinNotifications
	}
	return false
}

func (x *AuctionResponseExt) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

var file_org_bidon_proto_v1_mediation_mediation_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*context.DistributionChannel_App)(nil),
		ExtensionType: (*AppExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.app_ext",
		Tag:           "bytes,101,opt,name=app_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
	{
		ExtendedType:  (*context.Device)(nil),
		ExtensionType: (*DeviceExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.device_ext",
		Tag:           "bytes,101,opt,name=device_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
	{
		ExtendedType:  (*context.User)(nil),
		ExtensionType: (*UserExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.user_ext",
		Tag:           "bytes,101,opt,name=user_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
	{
		ExtendedType:  (*context.Regs)(nil),
		ExtensionType: (*RegsExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.regs_ext",
		Tag:           "bytes,101,opt,name=regs_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
	{
		ExtendedType:  (*placement.Placement)(nil),
		ExtensionType: (*PlacementExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.placement_ext",
		Tag:           "bytes,101,opt,name=placement_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
	{
		ExtendedType:  (*v3.Bid)(nil),
		ExtensionType: (*BidExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.bid_ext",
		Tag:           "bytes,101,opt,name=bid_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
	{
		ExtendedType:  (*v3.Response)(nil),
		ExtensionType: (*AuctionResponseExt)(nil),
		Field:         101,
		Name:          "org.bidon.proto.v1.mediation.auction_response_ext",
		Tag:           "bytes,101,opt,name=auction_response_ext",
		Filename:      "org/bidon/proto/v1/mediation/mediation.proto",
	},
}

// Extension fields to context.DistributionChannel_App.
var (
	// optional org.bidon.proto.v1.mediation.AppExt app_ext = 101;
	E_AppExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[0]
)

// Extension fields to context.Device.
var (
	// optional org.bidon.proto.v1.mediation.DeviceExt device_ext = 101;
	E_DeviceExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[1]
)

// Extension fields to context.User.
var (
	// optional org.bidon.proto.v1.mediation.UserExt user_ext = 101;
	E_UserExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[2]
)

// Extension fields to context.Regs.
var (
	// optional org.bidon.proto.v1.mediation.RegsExt regs_ext = 101;
	E_RegsExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[3]
)

// Extension fields to placement.Placement.
var (
	// optional org.bidon.proto.v1.mediation.PlacementExt placement_ext = 101;
	E_PlacementExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[4]
)

// Extension fields to v3.Bid.
var (
	// optional org.bidon.proto.v1.mediation.BidExt bid_ext = 101;
	E_BidExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[5]
)

// Extension fields to v3.Response.
var (
	// optional org.bidon.proto.v1.mediation.AuctionResponseExt auction_response_ext = 101;
	E_AuctionResponseExt = &file_org_bidon_proto_v1_mediation_mediation_proto_extTypes[6]
)

var File_org_bidon_proto_v1_mediation_mediation_proto protoreflect.FileDescriptor

var file_org_bidon_proto_v1_mediation_mediation_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6f, 0x72, 0x67, 0x2f, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x23, 0x63, 0x6f,
	0x6d, 0x2f, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62, 0x2f, 0x61, 0x64, 0x63,
	0x6f, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61,
	0x62, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x72, 0x74, 0x62, 0x2f, 0x76, 0x33, 0x2f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe8, 0x01, 0x0a, 0x06,
	0x41, 0x70, 0x70, 0x45, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x64,
	0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x6b, 0x61, 0x64, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x61, 0x64,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x86, 0x04, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x45, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x6e, 0x6f,
	0x74, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x4d, 0x6f, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x54,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x12, 0x2c, 0x0a, 0x12,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x5f,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x6f, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x54, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f,
	0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x54, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x54, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x6d,
	0x6f, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x19, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x4d, 0x6f, 0x6e, 0x6f, 0x74, 0x6f, 0x6e, 0x69, 0x63, 0x54, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x61, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6d, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x6d, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x46, 0x72, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x3d, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x22, 0xca,
	0x01, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64,
	0x66, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x64, 0x66, 0x61, 0x12, 0x42,
	0x0a, 0x1d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x66, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x64, 0x66, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x67, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x59, 0x0a, 0x07, 0x52,
	0x65, 0x67, 0x73, 0x45, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x75, 0x5f, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x75, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x61, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x61, 0x62, 0x22, 0xc6, 0x04, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x4b, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x07, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x2e, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x3e, 0x0a,
	0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x74, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x74, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x1a, 0x60, 0x0a,
	0x0c, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x84, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x73, 0x22, 0x4a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x12, 0x3e, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x22, 0x60, 0x0a, 0x0c, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x64, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x0a, 0x53, 0x64, 0x6b, 0x41, 0x64, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x64, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x01,
	0x0a, 0x06, 0x42, 0x69, 0x64, 0x45, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x3f, 0x0a, 0x03, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x64, 0x45, 0x78, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x78, 0x74, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x78,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x96, 0x03, 0x0a, 0x12, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x11, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x66, 0x6c,
	0x6f, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x1a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x69, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2a, 0x47, 0x0a, 0x0b, 0x4f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x52,
	0x49, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x52, 0x54, 0x52,
	0x41, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x41, 0x4e, 0x44, 0x53, 0x43, 0x41,
	0x50, 0x45, 0x10, 0x02, 0x2a, 0x57, 0x0a, 0x08, 0x41, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x16, 0x0a, 0x12, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x41, 0x4e, 0x4e,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x42, 0x4f,
	0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x52, 0x45, 0x43, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x44, 0x41, 0x50, 0x54, 0x49, 0x56, 0x45, 0x10, 0x04, 0x3a, 0x77, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69,
	0x61, 0x62, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x41,
	0x70, 0x70, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62,
	0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x78, 0x74, 0x52, 0x06,
	0x61, 0x70, 0x70, 0x45, 0x78, 0x74, 0x3a, 0x6f, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x65, 0x78, 0x74, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x61, 0x62, 0x74, 0x65,
	0x63, 0x68, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x65, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x52, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x3a, 0x67, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x65, 0x78, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63,
	0x68, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x3a, 0x67, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x64,
	0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x52,
	0x65, 0x67, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x67, 0x73, 0x45, 0x78, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x67, 0x73, 0x45, 0x78, 0x74, 0x3a, 0x7d, 0x0a, 0x0d, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x64, 0x63, 0x6f,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x3a, 0x5d, 0x0a, 0x07, 0x62, 0x69, 0x64, 0x5f,
	0x65, 0x78, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63,
	0x68, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x72, 0x74, 0x62, 0x2e, 0x76, 0x33, 0x2e,
	0x42, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x69, 0x64, 0x45, 0x78, 0x74, 0x52,
	0x06, 0x62, 0x69, 0x64, 0x45, 0x78, 0x74, 0x3a, 0x87, 0x01, 0x0a, 0x14, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x65, 0x78, 0x74,
	0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x61, 0x62, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61,
	0x62, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x72, 0x74, 0x62, 0x2e, 0x76, 0x33, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x74, 0x52, 0x12, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x78,
	0x74, 0x42, 0x92, 0x02, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x69,
	0x64, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2d, 0x69, 0x6f, 0x2f, 0x62, 0x69,
	0x64, 0x6f, 0x6e, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x62, 0x69, 0x64, 0x6f, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0xa2, 0x02, 0x05, 0x4f, 0x42, 0x50, 0x56, 0x4d, 0xaa, 0x02, 0x1c, 0x4f, 0x72, 0x67,
	0x2e, 0x42, 0x69, 0x64, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x31, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02, 0x1c, 0x4f, 0x72, 0x67, 0x5c,
	0x42, 0x69, 0x64, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x56, 0x31, 0x5c, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xe2, 0x02, 0x28, 0x4f, 0x72, 0x67, 0x5c, 0x42,
	0x69, 0x64, 0x6f, 0x6e, 0x5c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x56, 0x31, 0x5c, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x20, 0x4f, 0x72, 0x67, 0x3a, 0x3a, 0x42, 0x69, 0x64, 0x6f, 0x6e,
	0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
}

var (
	file_org_bidon_proto_v1_mediation_mediation_proto_rawDescOnce sync.Once
	file_org_bidon_proto_v1_mediation_mediation_proto_rawDescData = file_org_bidon_proto_v1_mediation_mediation_proto_rawDesc
)

func file_org_bidon_proto_v1_mediation_mediation_proto_rawDescGZIP() []byte {
	file_org_bidon_proto_v1_mediation_mediation_proto_rawDescOnce.Do(func() {
		file_org_bidon_proto_v1_mediation_mediation_proto_rawDescData = protoimpl.X.CompressGZIP(file_org_bidon_proto_v1_mediation_mediation_proto_rawDescData)
	})
	return file_org_bidon_proto_v1_mediation_mediation_proto_rawDescData
}

var file_org_bidon_proto_v1_mediation_mediation_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_org_bidon_proto_v1_mediation_mediation_proto_goTypes = []any{
	(Orientation)(0),                        // 0: org.bidon.proto.v1.mediation.Orientation
	(AdFormat)(0),                           // 1: org.bidon.proto.v1.mediation.AdFormat
	(*AppExt)(nil),                          // 2: org.bidon.proto.v1.mediation.AppExt
	(*DeviceExt)(nil),                       // 3: org.bidon.proto.v1.mediation.DeviceExt
	(*Segment)(nil),                         // 4: org.bidon.proto.v1.mediation.Segment
	(*UserExt)(nil),                         // 5: org.bidon.proto.v1.mediation.UserExt
	(*RegsExt)(nil),                         // 6: org.bidon.proto.v1.mediation.RegsExt
	(*PlacementExt)(nil),                    // 7: org.bidon.proto.v1.mediation.PlacementExt
	(*Demand)(nil),                          // 8: org.bidon.proto.v1.mediation.Demand
	(*BannerAd)(nil),                        // 9: org.bidon.proto.v1.mediation.BannerAd
	(*AdapterEntry)(nil),                    // 10: org.bidon.proto.v1.mediation.AdapterEntry
	(*SdkAdapter)(nil),                      // 11: org.bidon.proto.v1.mediation.SdkAdapter
	(*BidExt)(nil),                          // 12: org.bidon.proto.v1.mediation.BidExt
	(*AuctionResponseExt)(nil),              // 13: org.bidon.proto.v1.mediation.AuctionResponseExt
	nil,                                     // 14: org.bidon.proto.v1.mediation.PlacementExt.DemandsEntry
	nil,                                     // 15: org.bidon.proto.v1.mediation.BidExt.ExtEntry
	(*context.DistributionChannel_App)(nil), // 16: com.iabtechlab.adcom.v1.context.DistributionChannel.App
	(*context.Device)(nil),                  // 17: com.iabtechlab.adcom.v1.context.Device
	(*context.User)(nil),                    // 18: com.iabtechlab.adcom.v1.context.User
	(*context.Regs)(nil),                    // 19: com.iabtechlab.adcom.v1.context.Regs
	(*placement.Placement)(nil),             // 20: com.iabtechlab.adcom.v1.placement.Placement
	(*v3.Bid)(nil),                          // 21: com.iabtechlab.openrtb.v3.Bid
	(*v3.Response)(nil),                     // 22: com.iabtechlab.openrtb.v3.Response
}
var file_org_bidon_proto_v1_mediation_mediation_proto_depIdxs = []int32{
	4,  // 0: org.bidon.proto.v1.mediation.UserExt.segments:type_name -> org.bidon.proto.v1.mediation.Segment
	0,  // 1: org.bidon.proto.v1.mediation.PlacementExt.orientation:type_name -> org.bidon.proto.v1.mediation.Orientation
	14, // 2: org.bidon.proto.v1.mediation.PlacementExt.demands:type_name -> org.bidon.proto.v1.mediation.PlacementExt.DemandsEntry
	9,  // 3: org.bidon.proto.v1.mediation.PlacementExt.banner:type_name -> org.bidon.proto.v1.mediation.BannerAd
	1,  // 4: org.bidon.proto.v1.mediation.BannerAd.format:type_name -> org.bidon.proto.v1.mediation.AdFormat
	11, // 5: org.bidon.proto.v1.mediation.AdapterEntry.value:type_name -> org.bidon.proto.v1.mediation.SdkAdapter
	15, // 6: org.bidon.proto.v1.mediation.BidExt.ext:type_name -> org.bidon.proto.v1.mediation.BidExt.ExtEntry
	4,  // 7: org.bidon.proto.v1.mediation.AuctionResponseExt.segment:type_name -> org.bidon.proto.v1.mediation.Segment
	8,  // 8: org.bidon.proto.v1.mediation.PlacementExt.DemandsEntry.value:type_name -> org.bidon.proto.v1.mediation.Demand
	16, // 9: org.bidon.proto.v1.mediation.app_ext:extendee -> com.iabtechlab.adcom.v1.context.DistributionChannel.App
	17, // 10: org.bidon.proto.v1.mediation.device_ext:extendee -> com.iabtechlab.adcom.v1.context.Device
	18, // 11: org.bidon.proto.v1.mediation.user_ext:extendee -> com.iabtechlab.adcom.v1.context.User
	19, // 12: org.bidon.proto.v1.mediation.regs_ext:extendee -> com.iabtechlab.adcom.v1.context.Regs
	20, // 13: org.bidon.proto.v1.mediation.placement_ext:extendee -> com.iabtechlab.adcom.v1.placement.Placement
	21, // 14: org.bidon.proto.v1.mediation.bid_ext:extendee -> com.iabtechlab.openrtb.v3.Bid
	22, // 15: org.bidon.proto.v1.mediation.auction_response_ext:extendee -> com.iabtechlab.openrtb.v3.Response
	2,  // 16: org.bidon.proto.v1.mediation.app_ext:type_name -> org.bidon.proto.v1.mediation.AppExt
	3,  // 17: org.bidon.proto.v1.mediation.device_ext:type_name -> org.bidon.proto.v1.mediation.DeviceExt
	5,  // 18: org.bidon.proto.v1.mediation.user_ext:type_name -> org.bidon.proto.v1.mediation.UserExt
	6,  // 19: org.bidon.proto.v1.mediation.regs_ext:type_name -> org.bidon.proto.v1.mediation.RegsExt
	7,  // 20: org.bidon.proto.v1.mediation.placement_ext:type_name -> org.bidon.proto.v1.mediation.PlacementExt
	12, // 21: org.bidon.proto.v1.mediation.bid_ext:type_name -> org.bidon.proto.v1.mediation.BidExt
	13, // 22: org.bidon.proto.v1.mediation.auction_response_ext:type_name -> org.bidon.proto.v1.mediation.AuctionResponseExt
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	16, // [16:23] is the sub-list for extension type_name
	9,  // [9:16] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_org_bidon_proto_v1_mediation_mediation_proto_init() }
func file_org_bidon_proto_v1_mediation_mediation_proto_init() {
	if File_org_bidon_proto_v1_mediation_mediation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AppExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UserExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RegsExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PlacementExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Demand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*BannerAd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AdapterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SdkAdapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*BidExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AuctionResponseExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_org_bidon_proto_v1_mediation_mediation_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 7,
			NumServices:   0,
		},
		GoTypes:           file_org_bidon_proto_v1_mediation_mediation_proto_goTypes,
		DependencyIndexes: file_org_bidon_proto_v1_mediation_mediation_proto_depIdxs,
		EnumInfos:         file_org_bidon_proto_v1_mediation_mediation_proto_enumTypes,
		MessageInfos:      file_org_bidon_proto_v1_mediation_mediation_proto_msgTypes,
		ExtensionInfos:    file_org_bidon_proto_v1_mediation_mediation_proto_extTypes,
	}.Build()
	File_org_bidon_proto_v1_mediation_mediation_proto = out.File
	file_org_bidon_proto_v1_mediation_mediation_proto_rawDesc = nil
	file_org_bidon_proto_v1_mediation_mediation_proto_goTypes = nil
	file_org_bidon_proto_v1_mediation_mediation_proto_depIdxs = nil
}
