// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/bidon-io/bidon-backend/internal/sdkapi"
	"github.com/bidon-io/bidon-backend/internal/sdkapi/schema"
	"sync"
)

// Ensure, that ShowNotificationHandlerMock does implement sdkapi.ShowNotificationHandler.
// If this is not the case, regenerate this file with moq.
var _ sdkapi.ShowNotificationHandler = &ShowNotificationHandlerMock{}

// ShowNotificationHandlerMock is a mock implementation of sdkapi.ShowNotificationHandler.
//
//	func TestSomethingThatUsesShowNotificationHandler(t *testing.T) {
//
//		// make and configure a mocked sdkapi.ShowNotificationHandler
//		mockedShowNotificationHandler := &ShowNotificationHandlerMock{
//			HandleShowFunc: func(contextMoqParam context.Context, bid *schema.Bid)  {
//				panic("mock out the HandleShow method")
//			},
//		}
//
//		// use mockedShowNotificationHandler in code that requires sdkapi.ShowNotificationHandler
//		// and then make assertions.
//
//	}
type ShowNotificationHandlerMock struct {
	// HandleShowFunc mocks the HandleShow method.
	HandleShowFunc func(contextMoqParam context.Context, bid *schema.Bid)

	// calls tracks calls to the methods.
	calls struct {
		// HandleShow holds details about calls to the HandleShow method.
		HandleShow []struct {
			// ContextMoqParam is the contextMoqParam argument value.
			ContextMoqParam context.Context
			// Bid is the bid argument value.
			Bid *schema.Bid
		}
	}
	lockHandleShow sync.RWMutex
}

// HandleShow calls HandleShowFunc.
func (mock *ShowNotificationHandlerMock) HandleShow(contextMoqParam context.Context, bid *schema.Bid) {
	if mock.HandleShowFunc == nil {
		panic("ShowNotificationHandlerMock.HandleShowFunc: method is nil but ShowNotificationHandler.HandleShow was just called")
	}
	callInfo := struct {
		ContextMoqParam context.Context
		Bid             *schema.Bid
	}{
		ContextMoqParam: contextMoqParam,
		Bid:             bid,
	}
	mock.lockHandleShow.Lock()
	mock.calls.HandleShow = append(mock.calls.HandleShow, callInfo)
	mock.lockHandleShow.Unlock()
	mock.HandleShowFunc(contextMoqParam, bid)
}

// HandleShowCalls gets all the calls that were made to HandleShow.
// Check the length with:
//
//	len(mockedShowNotificationHandler.HandleShowCalls())
func (mock *ShowNotificationHandlerMock) HandleShowCalls() []struct {
	ContextMoqParam context.Context
	Bid             *schema.Bid
} {
	var calls []struct {
		ContextMoqParam context.Context
		Bid             *schema.Bid
	}
	mock.lockHandleShow.RLock()
	calls = mock.calls.HandleShow
	mock.lockHandleShow.RUnlock()
	return calls
}
